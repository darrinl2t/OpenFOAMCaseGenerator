// get access to dictionary
const IOdictionary& d = static_cast<const IOdictionary&>
(
    dict.parent().parent()
);

// get access to computational mesh
const fvMesh& mesh = refCast<const fvMesh>(d.db());

// get boundary patch ID by boundary condition name
const label id = mesh.boundary().findPatchID("inlet");

// get boundary patch based on ID obtained above
const fvPatch& patch = mesh.boundary()[id];

// current (total) time
const scalar currentTime = d.db().time().value();

// create new scalar field which will be written on boundary patch
scalarField field = 0.0;

// loop over all boundary faces if requires
forAll(field, faceI)
{
    // example usage shown below
    // access to boundary face coordinates
    const auto x = patch.Cf()[faceI].x();
    const auto y = patch.Cf()[faceI].y();
    const auto z = patch.Cf()[faceI].z();

    // set field based on location in space and time as required
    if (y > 0.5)
    {
        field[faceI] = 0.01 * currentTime;
    }
    else
    {
        field[faceI] = 0;
    }
}

// set boundary values to those computed values of "field"
field.writeEntry("", os);